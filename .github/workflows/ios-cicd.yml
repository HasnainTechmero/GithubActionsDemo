name: iOS CI/CD

on:
  push:
    branches:
      - main


jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@main

    - name: Set up Xcode 15.0.1
      run: |
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        xcodebuild -version
      shell: bash

    - name: Set up Git
      run: |
        git config --global user.email "hasnaintechmero@gmail.com"
        git config --global user.name "HasnainTechmero"
        git checkout main
      env:
        GIT_AUTH_TOKEN: ${{ secrets.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 }}

    - name: Install the Apple certificate and provisioning profile
      env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.GITHUBACTIONSDEMO_DISTRIBUTION_19OCT2023 }}
          KEYCHAIN_SECRET: ${{ secrets.KEYCHAIN_SECRET }}
      run: |
          # create variables\
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$GITHUBACTIONSDEMO_DISTRIBUTION_19OCT2023" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_SECRET" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_SECRET" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles          

    - name: build archive
      run: |
        xcodebuild archive -project /Users/techbaroda/Projects/GithubActionsDemo_App/GithubActionsDemo/GithubActionsDemo.xcodeproj -scheme "GithubActionsDemo" -configuration "Release" -archivePath PATH /Users/techbaroda/Projects/GithubActionsDemo_App/GithubActionsDemo/Archive/
        clean archive
        # working-directory: /Users/techbaroda/Projects/GithubActionsDemo_App/GithubActionsDemo/       

               
        
#    - name: Build and Archive
#      run: |
#        xcodebuild -workspace YourApp.xcworkspace \
#          -scheme YourScheme \
#          -sdk iphoneos \
#          -configuration Release \
#          -archivePath $HOME/YourApp.xcarchive \
#          clean archive
   # - name: export ipa
   #   env:
   #       EXPORT_OPTIONS_PLIST: ${{ secrets.EXPORT_OPTIONS_PLIST }}
   #   run: |
   #       EXPORT_OPTS_PATH=$RUNNER_TEMP/ExportOptions.plist
   #       echo -n "$EXPORT_OPTIONS_PLIST" | base64 --decode -o $EXPORT_OPTS_PATH
   #       xcodebuild -exportArchive -archivePath $RUNNER_TEMP/iamgroot.xcarchive -exportOptionsPlist $EXPORT_OPTS_PATH -exportPath $RUNNER_TEMP/build          

   # - name: Upload application
   #   uses: actions/upload-artifact@main
   #   with:
   #       name: app
   #       path: ${{ runner.temp }}/build/I\ am\ Groot.ipa
          # you can also archive the entire directory 
          # path: ${{ runner.temp }}/build
   #       retention-days: 3









    #- name: Update App Version
     # run: |
      #  APP_VERSION =$("2.0")
       # BUILD_NUMBER=$(git rev-list --count HEAD)
       # APP_NAME=$(xcrun agvtool what-app)
       # echo "Updating App Version to $APP_VERSION"
       # echo "Updating Build Number to $BUILD_NUMBER"
       # xcrun agvtool new-version -all "$APP_VERSION"
       # xcrun agvtool new-marketing-version "$APP_VERSION"

   # - name: Commit and Push
    #  run: |
     #   git config --global user.name "HasnainTechmero"
      #  git config --global user.email "hasnaintechmero@gmail.com"
      #  git add -A
      #  git commit -m "Update App Version to $APP_VERSION (Build $BUILD_NUMBER)"
      #  git push origin main
        
   # - name: Update Version and Build Number
    #  run: |
      
     #   PLIST_FILE=/Users/techbaroda/Projects/GithubActionsDemo_App/GithubActionsDemo/GithubActionsDemo/InfoFileFolder/Info.plist
      #  BUILD_NUMBER=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" "$PLIST_FILE")
       # NEW_BUILD_NUMBER=$((BUILD_NUMBER + 1))
        #echo "New build number: $NEW_BUILD_NUMBER"
        #/usr/libexec/PlistBuddy -c "Set :CFBundleVersion $NEW_BUILD_NUMBER" "$PLIST_FILE"
        
       # git config --global user.email "hasnaintechmero@gmail.com"
       # git config --global user.name "HasnainTechmero"
       
      #  git add "$PLIST_FILE"
       # git commit -m "Bump build number to $NEW_BUILD_NUMBER"
        #git push origin main
      #env:
       # GITHUB_TOKEN: ${{ secrets.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 }}






        
    #- name: Build and Run
    #  run: |
     #   xcodebuild -project /Users/techbaroda/Projects/GithubActionsDemo_App/GithubActionsDemo/GithubActionsDemo.xcodeproj -scheme GithubActionsDemoYourScheme -destination "platform=iOS Simulator,OS=16.0,name=iPhone 13" clean build test
     # working-directory: /Users/techbaroda/Projects/GithubActionsDemo_App/GithubActionsDemo/
      
    
   # - name: Deploy
      #uses: actions/setup-xcode@main
      # Add your deployment steps here, e.g., uploading to App Store Connect or TestFlight
